10010000000000000000000000001100 //Jump to constant address 6
10010000000000000011111101111000 //Jump to constant address 8124
10010000000000000011111110100110 //Jump to constant address 8147
10010000000000000011111111010100 //Jump to constant address 8170
10010000000000000100000000000010 //Jump to constant address 8193
00000000000000000010000000101001 //Length of program
01110000000000000000000000001111 //Set rsp to 0
01110000000001110000000100001111 //Set highest 16 bits of rsp to 112
01110000000000001110000000000001 //Set r1 to 14
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000000100000100000001 //Compute r1 - 4 and write result to r1
11010000000000000000111100010000 //Write value in r1 to address in rsp with offset 0
10010000000000000011111011100000 //Jump to constant address 8048
11111111111111111111111111111111 //Halt
01110010011000101110000000000010 //Set r2 to 9774
01110000000011000000000100000010 //Set highest 16 bits of r2 to 192
11010000000000000000001000010000 //Write value in r1 to address in r2 with offset 0
11111111111111111111111111111111 //Halt
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000000000 //data
00000000000000000000000000101111 //data
00000000000000000000000001011001 //data
00000000000000000000000000110001 //data
00000000000000000000000000101110 //data
00000000000000000000000001001000 //data
00000000000000000000000001010100 //data
00000000000000000000000001001101 //data
00000000000000000000000000000000 //data
00000000000000000000000000101111 //data
00000000000000000000000001011001 //data
00000000000000000000000000110001 //data
00000000000000000000000000101110 //data
00000000000000000000000001001000 //data
00000000000000000000000001010100 //data
00000000000000000000000001001101 //data
00000000000000000000000000000000 //data
00000000000000000000000000101111 //data
00000000000000000000000001001001 //data
00000000000000000000000001001110 //data
00000000000000000000000001000100 //data
00000000000000000000000001000101 //data
00000000000000000000000001011000 //data
00000000000000000000000000101110 //data
00000000000000000000000001001000 //data
00000000000000000000000001010100 //data
00000000000000000000000001001101 //data
00000000000000000000000000000000 //data
00000000000000000000000001000101 //data
00000000000000000000000001110010 //data
00000000000000000000000001110010 //data
00000000000000000000000001101111 //data
00000000000000000000000001110010 //data
00000000000000000000000000100000 //data
00000000000000000000000001110111 //data
00000000000000000000000001101000 //data
00000000000000000000000001101001 //data
00000000000000000000000001101100 //data
00000000000000000000000001100101 //data
00000000000000000000000000100000 //data
00000000000000000000000001110111 //data
00000000000000000000000001110010 //data
00000000000000000000000001101001 //data
00000000000000000000000001110100 //data
00000000000000000000000001101001 //data
00000000000000000000000001101110 //data
00000000000000000000000001100111 //data
00000000000000000000000000100000 //data
00000000000000000000000001100100 //data
00000000000000000000000001100001 //data
00000000000000000000000001110100 //data
00000000000000000000000001100001 //data
00000000000000000000000000000000 //data
00000000000000000000000000101100 //data
00000000000000000000000000100000 //data
00000000000000000000000001001001 //data
00000000000000000000000001000011 //data
00000000000000000000000000100000 //data
00000000000000000000000001110110 //data
00000000000000000000000001100101 //data
00000000000000000000000001110010 //data
00000000000000000000000001110011 //data
00000000000000000000000001101001 //data
00000000000000000000000001101111 //data
00000000000000000000000001101110 //data
00000000000000000000000000000000 //data
00000000000000000000000000101111 //data
00000000000000000000000001011001 //data
00000000000000000000000000110001 //data
00000000000000000000000000101110 //data
00000000000000000000000001001000 //data
00000000000000000000000001010100 //data
00000000000000000000000001001101 //data
00000000000000000000000000000000 //data
00000000000000000000000001000110 //data
00000000000000000000000001101001 //data
00000000000000000000000001101100 //data
00000000000000000000000001100101 //data
00000000000000000000000000100000 //data
00000000000000000000000001110011 //data
00000000000000000000000001101001 //data
00000000000000000000000001111010 //data
00000000000000000000000001100101 //data
00000000000000000000000000111010 //data
00000000000000000000000000100000 //data
00000000000000000000000000000000 //data
00000000000000000000000001000101 //data
00000000000000000000000001110010 //data
00000000000000000000000001110010 //data
00000000000000000000000001101111 //data
00000000000000000000000001110010 //data
00000000000000000000000000100000 //data
00000000000000000000000001110111 //data
00000000000000000000000001101000 //data
00000000000000000000000001101001 //data
00000000000000000000000001101100 //data
00000000000000000000000001100101 //data
00000000000000000000000000100000 //data
00000000000000000000000001110010 //data
00000000000000000000000001100101 //data
00000000000000000000000001100001 //data
00000000000000000000000001100100 //data
00000000000000000000000001101001 //data
00000000000000000000000001101110 //data
00000000000000000000000001100111 //data
00000000000000000000000000100000 //data
00000000000000000000000001100100 //data
00000000000000000000000001100001 //data
00000000000000000000000001110100 //data
00000000000000000000000001100001 //data
00000000000000000000000000000000 //data
00000000000000000000000000001010 //data
00000000000000000000000000000000 //data
00000000000000000000000001000110 //data
00000000000000000000000001101001 //data
00000000000000000000000001101100 //data
00000000000000000000000001100101 //data
00000000000000000000000000100000 //data
00000000000000000000000001110011 //data
00000000000000000000000001101001 //data
00000000000000000000000001111010 //data
00000000000000000000000001100101 //data
00000000000000000000000000111010 //data
00000000000000000000000000100000 //data
00000000000000000000000000000000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110100 //data
00000000000000000000000000110101 //data
00000000000000000000000000110110 //data
00000000000000000000000000110111 //data
00000000000000000000000000111000 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110100 //data
00000000000000000000000000110010 //data
00000000000000000000000000110101 //data
00000000000000000000000000110010 //data
00000000000000000000000000110110 //data
00000000000000000000000000110010 //data
00000000000000000000000000110111 //data
00000000000000000000000000110010 //data
00000000000000000000000000111000 //data
00000000000000000000000000110010 //data
00000000000000000000000000111001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110000 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110011 //data
00000000000000000000000000110011 //data
00000000000000000000000000110100 //data
00000000000000000000000000110011 //data
00000000000000000000000000110101 //data
00000000000000000000000000110011 //data
00000000000000000000000000110110 //data
00000000000000000000000000110011 //data
00000000000000000000000000110111 //data
00000000000000000000000000110011 //data
00000000000000000000000000111000 //data
00000000000000000000000000110011 //data
00000000000000000000000000111001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110000 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110010 //data
00000000000000000000000000110100 //data
00000000000000000000000000110011 //data
00000000000000000000000000110100 //data
00000000000000000000000000110100 //data
00000000000000000000000000110100 //data
00000000000000000000000000110101 //data
00000000000000000000000000110100 //data
00000000000000000000000000110110 //data
00000000000000000000000000110100 //data
00000000000000000000000000110111 //data
00000000000000000000000000110100 //data
00000000000000000000000000111000 //data
00000000000000000000000000110100 //data
00000000000000000000000000111001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110000 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110010 //data
00000000000000000000000000110101 //data
00000000000000000000000000110011 //data
00000000000000000000000000110101 //data
00000000000000000000000000110100 //data
00000000000000000000000000110101 //data
00000000000000000000000000110101 //data
00000000000000000000000000110101 //data
00000000000000000000000000110110 //data
00000000000000000000000000110101 //data
00000000000000000000000000110111 //data
00000000000000000000000000110101 //data
00000000000000000000000000111000 //data
00000000000000000000000000110101 //data
00000000000000000000000000111001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110000 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110010 //data
00000000000000000000000000110110 //data
00000000000000000000000000110011 //data
00000000000000000000000000110110 //data
00000000000000000000000000110100 //data
00000000000000000000000000110110 //data
00000000000000000000000000110101 //data
00000000000000000000000000110110 //data
00000000000000000000000000110110 //data
00000000000000000000000000110110 //data
00000000000000000000000000110111 //data
00000000000000000000000000110110 //data
00000000000000000000000000111000 //data
00000000000000000000000000110110 //data
00000000000000000000000000111001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110000 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110010 //data
00000000000000000000000000110111 //data
00000000000000000000000000110011 //data
00000000000000000000000000110111 //data
00000000000000000000000000110100 //data
00000000000000000000000000110111 //data
00000000000000000000000000110101 //data
00000000000000000000000000110111 //data
00000000000000000000000000110110 //data
00000000000000000000000000110111 //data
00000000000000000000000000110111 //data
00000000000000000000000000110111 //data
00000000000000000000000000111000 //data
00000000000000000000000000110111 //data
00000000000000000000000000111001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110000 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110010 //data
00000000000000000000000000111000 //data
00000000000000000000000000110011 //data
00000000000000000000000000111000 //data
00000000000000000000000000110100 //data
00000000000000000000000000111000 //data
00000000000000000000000000110101 //data
00000000000000000000000000111000 //data
00000000000000000000000000110110 //data
00000000000000000000000000111000 //data
00000000000000000000000000110111 //data
00000000000000000000000000111000 //data
00000000000000000000000000111000 //data
00000000000000000000000000111000 //data
00000000000000000000000000111001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110000 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110010 //data
00000000000000000000000000111001 //data
00000000000000000000000000110011 //data
00000000000000000000000000111001 //data
00000000000000000000000000110100 //data
00000000000000000000000000111001 //data
00000000000000000000000000110101 //data
00000000000000000000000000111001 //data
00000000000000000000000000110110 //data
00000000000000000000000000111001 //data
00000000000000000000000000110111 //data
00000000000000000000000000111001 //data
00000000000000000000000000111000 //data
00000000000000000000000000111001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110100 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110101 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110110 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110111 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000111000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000111001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110100 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110101 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110110 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110111 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000111000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000111001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110100 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110101 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110110 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110111 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000111000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000111001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110000 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110001 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110011 //data
00000000000000000000000000110010 //data
00000000000000000000000000110011 //data
00000000000000000000000000110100 //data
00000000000000000000000000000000 //data
00000000000000000000000001000110 //data
00000000000000000000000001101001 //data
00000000000000000000000001101100 //data
00000000000000000000000001100101 //data
00000000000000000000000000100000 //data
00000000000000000000000001110011 //data
00000000000000000000000001101001 //data
00000000000000000000000001111010 //data
00000000000000000000000001100101 //data
00000000000000000000000000111010 //data
00000000000000000000000000100000 //data
00000000000000000000000000000000 //data
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000001001100 //Compute r0 OR r4 and write result to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000010010111101110 //Jump to constant address 4855
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010011000000100 //Jump to constant address 4866
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000000000000000000001 //Set r1 to 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000001011100 //Compute r0 OR r5 and write result to r12
00000000000000000000000001001101 //Compute r0 OR r4 and write result to r13
01000000000000000010110111000000 //If r13 > r12, then jump to offset 2
10010000000000000010011000010010 //Jump to constant address 4873
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010011000101100 //Jump to constant address 4886
00000000000000000000000001011100 //Compute r0 OR r5 and write result to r12
00000000000000000000000001001101 //Compute r0 OR r4 and write result to r13
00000010000000000000110011011100 //Compute r12 - r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
10010000000000000010011000000110 //Jump to constant address 4867
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000001001100 //Compute r0 OR r4 and write result to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000010011001001100 //Jump to constant address 4902
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010011001100010 //Jump to constant address 4913
00000000000000000000000001010001 //Compute r0 OR r5 and write result to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000000000000 //NOP to quickfix double labels
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000001011100 //Compute r0 OR r5 and write result to r12
00000000000000000000000001001101 //Compute r0 OR r4 and write result to r13
01000000000000000010110111000000 //If r13 > r12, then jump to offset 2
10010000000000000010011001110000 //Jump to constant address 4920
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010011010000010 //Jump to constant address 4929
00000000000000000000000001011100 //Compute r0 OR r5 and write result to r12
00000000000000000000000001001101 //Compute r0 OR r4 and write result to r13
00000010000000000000110011011100 //Compute r12 - r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
10010000000000000010011001100100 //Jump to constant address 4914
00000000000000000000000001010001 //Compute r0 OR r5 and write result to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110000000000000000000000000010 //Set r2 to 0
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00000000000000000000000000111101 //Compute r0 OR r3 and write result to r13
00110000000000000010110011010000 //If r12 >= r13, then jump to offset 2
10010000000000000010011010100110 //Jump to constant address 4947
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010011011100110 //Jump to constant address 4979
00000000000000000000000000100001 //Compute r0 OR r2 and write result to r1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000001001100 //Compute r0 OR r4 and write result to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
11100000000000000000000100001000 //Read at address in r1 with offset 0 to r8
00000000000000000000000000100001 //Compute r0 OR r2 and write result to r1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000001011100 //Compute r0 OR r5 and write result to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
11010000000000000000000110000000 //Write value in r8 to address in r1 with offset 0
00000000000000000000000000100001 //Compute r0 OR r2 and write result to r1
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
10010000000000000010011010011010 //Jump to constant address 4941
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110010011000101110000000000001 //Set r1 to 9774
01110000000011000000000100000001 //Set highest 16 bits of r1 to 192
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
11010000000000000000000101010000 //Write value in r5 to address in r1 with offset 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110010011000101110000000000011 //Set r3 to 9774
01110000000011000000000100000011 //Set highest 16 bits of r3 to 192
00000000000000000000000001010001 //Compute r0 OR r5 and write result to r1
11100000000000000000000100000010 //Read at address in r1 with offset 0 to r2
00000000000000000000000000100001 //Compute r0 OR r2 and write result to r1
01110000000000000001000000000100 //Set r4 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000000000000001101 //Set r13 to 0
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010011100101100 //Jump to constant address 5014
01110000000000000000000000000100 //Set r4 to 0
00000000000000000000000001001100 //Compute r0 OR r4 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010011101001000 //Jump to constant address 5028
00000000000000000000000000110001 //Compute r0 OR r3 and write result to r1
11010000000000000000000100100000 //Write value in r2 to address in r1 with offset 0
00000000000000000000000001010001 //Compute r0 OR r5 and write result to r1
00000000000000000000000001011100 //Compute r0 OR r5 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
00000000000000000000000001010001 //Compute r0 OR r5 and write result to r1
11100000000000000000000100000010 //Read at address in r1 with offset 0 to r2
10010000000000000010011100011110 //Jump to constant address 5007
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110001001110000111000000000001 //Set r1 to 4999
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110000111000000000001 //Set r1 to 4999
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000010000000000000000101 //Set r5 to 4224
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000100111100001111 //Compute rsp - 4 and write result to rsp
11010000000000000001111001010001 //Write value in r5 to address in rbp with offset -1
11010000000000000010111001000001 //Write value in r4 to address in rbp with offset -2
01110001001100011100000000000001 //Set r1 to 4892
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000000001111000100101 //Read at address in rbp with offset -1 to r5
01110000000000001010000000000100 //Set r4 to 10
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000000011111000010001 //Write value in r1 to address in rbp with offset -3
01110000000000000000000000001100 //Set r12 to 0
11010000000000000100111011000001 //Write value in r12 to address in rbp with offset -4
01110001001011101101000000000001 //Set r1 to 4845
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000000001111000100101 //Read at address in rbp with offset -1 to r5
01110000000000001010000000000100 //Set r4 to 10
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000000001111000010001 //Write value in r1 to address in rbp with offset -1
01110000000000000001000000000001 //Set r1 to 1
11100000000000000001111000101100 //Read at address in rbp with offset -1 to r12
01110000000000000000000000001101 //Set r13 to 0
00110000000000000010110111000000 //If r13 >= r12, then jump to offset 2
10010000000000000010011111001100 //Jump to constant address 5094
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010011111110000 //Jump to constant address 5112
01110001001111000100000000000001 //Set r1 to 5060
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000000001111000100101 //Read at address in rbp with offset -1 to r5
11100000000000000010111000100100 //Read at address in rbp with offset -2 to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000000100111000101100 //Read at address in rbp with offset -4 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000000100111000010001 //Write value in r1 to address in rbp with offset -4
11100000000000000011111000101100 //Read at address in rbp with offset -3 to r12
01110000000000110000000000001101 //Set r13 to 48
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
11100000000000000100111000100001 //Read at address in rbp with offset -4 to r1
11100000000000000100111000101100 //Read at address in rbp with offset -4 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000011 //Compute r0 OR r12 and write result to r3
11010000000000000100111000110001 //Write value in r3 to address in rbp with offset -4
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000000010111000101100 //Read at address in rbp with offset -2 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
11010000000000000000000100100000 //Write value in r2 to address in r1 with offset 0
11100000000000000100111000100001 //Read at address in rbp with offset -4 to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000101111100001111 //Compute rsp - 5 and write result to rsp
11010000000000000101111001000001 //Write value in r4 to address in rbp with offset -5
01110001001111000100000000000001 //Set r1 to 5060
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000000101111000100100 //Read at address in rbp with offset -5 to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000000101111000101100 //Read at address in rbp with offset -5 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
01110000000000000000000000001100 //Set r12 to 0
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000001001111100001111 //Compute rsp - 9 and write result to rsp
11010000000000000110111001010001 //Write value in r5 to address in rbp with offset -6
11010000000000000111111001000001 //Write value in r4 to address in rbp with offset -7
01110001001100011100000000000001 //Set r1 to 4892
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000000110111000100101 //Read at address in rbp with offset -6 to r5
01110000000000010000000000000100 //Set r4 to 16
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000001000111000010001 //Write value in r1 to address in rbp with offset -8
01110000000000000000000000001100 //Set r12 to 0
11010000000000001001111011000001 //Write value in r12 to address in rbp with offset -9
01110001001011101101000000000001 //Set r1 to 4845
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000000110111000100101 //Read at address in rbp with offset -6 to r5
01110000000000010000000000000100 //Set r4 to 16
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000000110111000010001 //Write value in r1 to address in rbp with offset -6
01110000000000000001000000000001 //Set r1 to 1
11100000000000000110111000101100 //Read at address in rbp with offset -6 to r12
01110000000000000000000000001101 //Set r13 to 0
00110000000000000010110111000000 //If r13 >= r12, then jump to offset 2
10010000000000000010100010100110 //Jump to constant address 5203
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010100011001010 //Jump to constant address 5221
01110001010000110001000000000001 //Set r1 to 5169
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000000110111000100101 //Read at address in rbp with offset -6 to r5
11100000000000000111111000100100 //Read at address in rbp with offset -7 to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000001001111000101100 //Read at address in rbp with offset -9 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000001001111000010001 //Write value in r1 to address in rbp with offset -9
01110000000000000001000000000001 //Set r1 to 1
11100000000000001000111000101100 //Read at address in rbp with offset -8 to r12
01110000000000001001000000001101 //Set r13 to 9
00110000000000000010110111000000 //If r13 >= r12, then jump to offset 2
10010000000000000010100011010110 //Jump to constant address 5227
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010100011110000 //Jump to constant address 5240
11100000000000001000111000101100 //Read at address in rbp with offset -8 to r12
01110000000001000001000000001101 //Set r13 to 65
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
01110000000000001010000000001101 //Set r13 to 10
00000010000000000000110011011100 //Compute r12 - r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
10010000000000000010100011111000 //Jump to constant address 5244
11100000000000001000111000101100 //Read at address in rbp with offset -8 to r12
01110000000000110000000000001101 //Set r13 to 48
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
11100000000000001001111000100001 //Read at address in rbp with offset -9 to r1
11100000000000001001111000101100 //Read at address in rbp with offset -9 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000011 //Compute r0 OR r12 and write result to r3
11010000000000001001111000110001 //Write value in r3 to address in rbp with offset -9
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000000111111000101100 //Read at address in rbp with offset -7 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
11010000000000000000000100100000 //Write value in r2 to address in r1 with offset 0
11100000000000001001111000100001 //Read at address in rbp with offset -9 to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000001010111100001111 //Compute rsp - 10 and write result to rsp
11010000000000001010111001000001 //Write value in r4 to address in rbp with offset -10
01110000000000000000000000001100 //Set r12 to 0
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000001010111000101100 //Read at address in rbp with offset -10 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
01110000000000110000000000001100 //Set r12 to 48
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
01110000000000000001000000001100 //Set r12 to 1
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000001010111000101100 //Read at address in rbp with offset -10 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
01110000000001111000000000001100 //Set r12 to 120
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
01110000000000000010000000001100 //Set r12 to 2
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000001010111000101100 //Read at address in rbp with offset -10 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000001010111000010001 //Write value in r1 to address in rbp with offset -10
01110001010000110001000000000001 //Set r1 to 5169
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000001010111000100100 //Read at address in rbp with offset -10 to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000001010111000101100 //Read at address in rbp with offset -10 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
01110000000000000000000000001100 //Set r12 to 0
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110000000000000000000000000011 //Set r3 to 0
01110000000001001100000100000011 //Set highest 16 bits of r3 to 76
00000000000000000000000000110001 //Compute r0 OR r3 and write result to r1
01110000000000000000000000001100 //Set r12 to 0
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
01110010011000100110000000000001 //Set r1 to 9766
01110000000011000000000100000001 //Set highest 16 bits of r1 to 192
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
11010000000000000000000101010000 //Write value in r5 to address in r1 with offset 0
01110010011000100111000000000001 //Set r1 to 9767
01110000000011000000000100000001 //Set highest 16 bits of r1 to 192
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
01110000000000000001000000001100 //Set r12 to 1
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
00000000000000000000000000110001 //Compute r0 OR r3 and write result to r1
11100000000000000000000100000010 //Read at address in r1 with offset 0 to r2
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000010100111010100 //Jump to constant address 5354
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010100111011110 //Jump to constant address 5359
10010000000000000010100111000100 //Jump to constant address 5346
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
01110010011000110000000000000011 //Set r3 to 9776
01110000000011000000000100000011 //Set highest 16 bits of r3 to 192
11100000000000000000001100000001 //Read at address in r3 with offset 0 to r1
01111111111011111111000000000010 //Set r2 to 0b1111111011111111
00000000100000000000000100100001 //Compute r1 AND r2 and write result to r1
11010000000000000000001100010000 //Write value in r1 to address in r3 with offset 0
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
01110010011000110000000000000011 //Set r3 to 9776
01110000000011000000000100000011 //Set highest 16 bits of r3 to 192
11100000000000000000001100000001 //Read at address in r3 with offset 0 to r1
01110000000100000000000000000010 //Set r2 to 0b100000000
00000000000000000000000100100001 //Compute r1 OR r2 and write result to r1
11010000000000000000001100010000 //Write value in r1 to address in r3 with offset 0
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000000000111100001111 //Compute rsp - 0 and write result to rsp
01110010011000110001000000000001 //Set r1 to 9777
01110000000011000000000100000001 //Set highest 16 bits of r1 to 192
11010000000000000000000101010000 //Write value in r5 to address in r1 with offset 0
11100000000000000000000100000001 //Read at address in r1 with offset 0 to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000001011111100001111 //Compute rsp - 11 and write result to rsp
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010101001111010 //Jump to constant address 5437
01110010011000100100000000000001 //Set r1 to 9764
01110000000011000000000100000001 //Set highest 16 bits of r1 to 192
00000000000000000000000000010010 //Compute r0 OR r1 and write result to r2
11100000000000000000001000000001 //Read at address in r2 with offset 0 to r1
10010000000000000010101001101000 //Jump to constant address 5428
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000100010000000000101 //Set r5 to 34
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011010000000000000001 //Set r1 to 5328
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000001000000000101 //Set r5 to 1
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000001011111000010001 //Write value in r1 to address in rbp with offset -11
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000001011111000100001 //Read at address in rbp with offset -11 to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000001100111100001111 //Compute rsp - 12 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000100010000000000101 //Set r5 to 34
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000001100111000010001 //Write value in r1 to address in rbp with offset -12
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000001100111000100001 //Read at address in rbp with offset -12 to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000001101111100001111 //Compute rsp - 13 and write result to rsp
11010000000000001101111001010001 //Write value in r5 to address in rbp with offset -13
11100000000000001101111000100001 //Read at address in rbp with offset -13 to r1
11100000000000000000000100000101 //Read at address in r1 with offset 0 to r5
00000000000000000000000001010001 //Compute r0 OR r5 and write result to r1
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000000000000001101 //Set r13 to 0
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010101101100010 //Jump to constant address 5553
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010101110001010 //Jump to constant address 5573
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000001101111000100001 //Read at address in rbp with offset -13 to r1
11100000000000001101111000101100 //Read at address in rbp with offset -13 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000001101111000010001 //Write value in r1 to address in rbp with offset -13
11100000000000001101111000100001 //Read at address in rbp with offset -13 to r1
11100000000000000000000100000101 //Read at address in r1 with offset 0 to r5
10010000000000000010101101010100 //Jump to constant address 5546
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000010000111100001111 //Compute rsp - 16 and write result to rsp
11010000000000001110111001010001 //Write value in r5 to address in rbp with offset -14
11010000000000001111111001000001 //Write value in r4 to address in rbp with offset -15
11100000000000001110111000100001 //Read at address in rbp with offset -14 to r1
11100000000000000000000100000101 //Read at address in r1 with offset 0 to r5
01110000000000000000000000001100 //Set r12 to 0
11010000000000010000111011000001 //Write value in r12 to address in rbp with offset -16
01110000000000000001000000000001 //Set r1 to 1
11100000000000010000111000101100 //Read at address in rbp with offset -16 to r12
11100000000000001111111000101101 //Read at address in rbp with offset -15 to r13
00110000000000000010110011010000 //If r12 >= r13, then jump to offset 2
10010000000000000010101110110110 //Jump to constant address 5595
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010101111101010 //Jump to constant address 5621
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000001110111000100001 //Read at address in rbp with offset -14 to r1
11100000000000001110111000101100 //Read at address in rbp with offset -14 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000001110111000010001 //Write value in r1 to address in rbp with offset -14
11100000000000001110111000100001 //Read at address in rbp with offset -14 to r1
11100000000000000000000100000101 //Read at address in r1 with offset 0 to r5
11100000000000010000111000100001 //Read at address in rbp with offset -16 to r1
11100000000000010000111000101100 //Read at address in rbp with offset -16 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000010000111000010001 //Write value in r1 to address in rbp with offset -16
10010000000000000010101110101010 //Jump to constant address 5589
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011011111100001111 //Compute rsp - 27 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000001000000000101 //Set r5 to 1
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011010000000000000001 //Set r1 to 5328
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000001000000000101 //Set r5 to 1
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000011011111000010001 //Write value in r1 to address in rbp with offset -27
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010010010011000000000001 //Set r1 to 5267
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000011010111000000100 //Compute rbp - 26 and write result to r4
11100000000000011011111000100101 //Read at address in rbp with offset -27 to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110000111000000000001 //Set r1 to 4999
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000011010111000000101 //Compute rbp - 26 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110101010000000000001 //Set r1 to 5034
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000001000110000000000101 //Set r5 to 4166
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011101111100001111 //Compute rsp - 29 and write result to rsp
11010000000000011100111001010001 //Write value in r5 to address in rbp with offset -28
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000010101000000000101 //Set r5 to 21
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011010000000000000001 //Set r1 to 5328
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000001000000000101 //Set r5 to 1
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000011100111000100101 //Read at address in rbp with offset -28 to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011010000000000000001 //Set r1 to 5328
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000001000000000101 //Set r5 to 1
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000011101111000010001 //Write value in r1 to address in rbp with offset -29
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011010000000000000001 //Set r1 to 5328
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000001000000000101 //Set r5 to 1
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000011101111000100001 //Read at address in rbp with offset -29 to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011010111100001111 //Compute rsp - 26 and write result to rsp
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011010000000000000001 //Set r1 to 5328
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000111100000000000101 //Set r5 to 60
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000101000000000101 //Set r5 to 5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011010000000000000001 //Set r1 to 5328
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000001100100000000000101 //Set r5 to 100
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001011001000110000000000001 //Set r1 to 5702
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000101000000000101 //Set r5 to 5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000001010001000000001101 //Set r13 to 81
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000010110111011000 //Jump to constant address 5868
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010110111110000 //Jump to constant address 5880
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
10010000000000000010110111111110 //Jump to constant address 5887
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011010111100001111 //Compute rsp - 26 and write result to rsp
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010101000000001101 //Set r13 to 21
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010111000101100 //Jump to constant address 5910
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010111000110110 //Jump to constant address 5915
10010000000000000010111000010010 //Jump to constant address 5897
01110001011001000110000000000001 //Set r1 to 5702
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000111000000000101 //Set r5 to 7
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000001010001000000001101 //Set r13 to 81
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010111001010010 //Jump to constant address 5929
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010111001101000 //Jump to constant address 5940
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001011001000110000000000001 //Set r1 to 5702
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000110000000000101 //Set r5 to 6
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000001010001000000001101 //Set r13 to 81
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010111010000100 //Jump to constant address 5954
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010111010011010 //Jump to constant address 5965
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000000000000 //NOP to quickfix double labels
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010101000000001101 //Set r13 to 21
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010111010110110 //Jump to constant address 5979
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010111011000000 //Jump to constant address 5984
10010000000000000010111010011100 //Jump to constant address 5966
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000110000000000000101 //Set r5 to 48
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010111100000110 //Jump to constant address 6019
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010111100011100 //Jump to constant address 6030
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000110001000000000101 //Set r5 to 49
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000010111101100010 //Jump to constant address 6065
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000010111101111000 //Jump to constant address 6076
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011110111100001111 //Compute rsp - 30 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000001100000000000101 //Set r5 to 12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000001101000000000000101 //Set r5 to 104
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000011110111000010001 //Write value in r1 to address in rbp with offset -30
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000001000000000001101 //Set r13 to 8
00000010100000000000110011011100 //Compute r12 << r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000011110111000101100 //Read at address in rbp with offset -30 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000011110111000010001 //Write value in r1 to address in rbp with offset -30
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010000000000001101 //Set r13 to 16
00000010100000000000110011011100 //Compute r12 << r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000011110111000101100 //Read at address in rbp with offset -30 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000011110111000010001 //Write value in r1 to address in rbp with offset -30
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000011000000000001101 //Set r13 to 24
00000010100000000000110011011100 //Compute r12 << r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000011110111000101100 //Read at address in rbp with offset -30 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000011110111000010001 //Write value in r1 to address in rbp with offset -30
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000011110111000100001 //Read at address in rbp with offset -30 to r1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011111111100001111 //Compute rsp - 31 and write result to rsp
11010000000000011111111001010001 //Write value in r5 to address in rbp with offset -31
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000111001000000000101 //Set r5 to 57
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000011111111000100101 //Read at address in rbp with offset -31 to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000011111111000101100 //Read at address in rbp with offset -31 to r12
01110000000000001000000000001101 //Set r13 to 8
00000011000000000000110011011100 //Compute r12 >> r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000011111111000101100 //Read at address in rbp with offset -31 to r12
01110000000000010000000000001101 //Set r13 to 16
00000011000000000000110011011100 //Compute r12 >> r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000011111111000101100 //Read at address in rbp with offset -31 to r12
01110000000000011000000000001101 //Set r13 to 24
00000011000000000000110011011100 //Compute r12 >> r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000011000011110010 //Jump to constant address 6265
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011000100001000 //Jump to constant address 6276
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000100101111100001111 //Compute rsp - 37 and write result to rsp
11010000000000100000111001010001 //Write value in r5 to address in rbp with offset -32
11010000000000100100111001000001 //Write value in r4 to address in rbp with offset -36
01110000000000000001000000000001 //Set r1 to 1
11100000000000100100111000101100 //Read at address in rbp with offset -36 to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011000100101110 //Jump to constant address 6295
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011000101000100 //Jump to constant address 6306
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000111010000000000101 //Set r5 to 58
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000100100111000100101 //Read at address in rbp with offset -36 to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000100100111000101100 //Read at address in rbp with offset -36 to r12
01110000000000001000000000001101 //Set r13 to 8
00000011000000000000110011011100 //Compute r12 >> r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000011101000000001101 //Set r13 to 29
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000011000110110000 //Jump to constant address 6360
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011000111000110 //Jump to constant address 6371
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000000000000000001100 //Set r12 to 0
11010000000000100001111011000001 //Write value in r12 to address in rbp with offset -33
01110000000000000000000000001100 //Set r12 to 0
11010000000000100010111011000001 //Write value in r12 to address in rbp with offset -34
01110000000000000001000000000001 //Set r1 to 1
11100000000000100010111000101100 //Read at address in rbp with offset -34 to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011000111011010 //Jump to constant address 6381
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011001100000100 //Jump to constant address 6530
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000100111000000000101 //Set r5 to 39
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000100011111000010001 //Write value in r1 to address in rbp with offset -35
01110000000000000000000000001100 //Set r12 to 0
11010000000000100101111011000001 //Write value in r12 to address in rbp with offset -37
01110000000000000001000000000001 //Set r1 to 1
11100000000000100101111000101100 //Read at address in rbp with offset -37 to r12
11100000000000100011111000101101 //Read at address in rbp with offset -35 to r13
00110000000000000010110011010000 //If r12 >= r13, then jump to offset 2
10010000000000000011001000100010 //Jump to constant address 6417
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011001001101000 //Jump to constant address 6452
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000100001111000100010 //Read at address in rbp with offset -33 to r2
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
11100000000000100000111000101100 //Read at address in rbp with offset -32 to r12
00000000000000000000000000101101 //Compute r0 OR r2 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
00000000000000000000000000100010 //Compute r0 OR r2 and write result to r2
11010000000000000000001000010000 //Write value in r1 to address in r2 with offset 0
11100000000000100001111000101100 //Read at address in rbp with offset -33 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000100001111000010001 //Write value in r1 to address in rbp with offset -33
11100000000000100101111000100001 //Read at address in rbp with offset -37 to r1
11100000000000100101111000101100 //Read at address in rbp with offset -37 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000100101111000010001 //Write value in r1 to address in rbp with offset -37
10010000000000000011001000010110 //Jump to constant address 6411
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000111011000000000101 //Set r5 to 59
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011001010111100 //Jump to constant address 6494
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011001011001010 //Jump to constant address 6501
01110000000000000001000000001100 //Set r12 to 1
11010000000000100010111011000001 //Write value in r12 to address in rbp with offset -34
10010000000000000011001100000010 //Jump to constant address 6529
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000011101000000001101 //Set r13 to 29
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011001011010110 //Jump to constant address 6507
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011001011100000 //Jump to constant address 6512
10010000000000000011001100000000 //Jump to constant address 6528
01110001001110101010000000000001 //Set r1 to 5034
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000001100111000000000101 //Set r5 to 4199
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000000000000 //NOP to quickfix double labels
10010000000000000011000111001110 //Jump to constant address 6375
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000101010111100001111 //Compute rsp - 42 and write result to rsp
11010000000000100110111001010001 //Write value in r5 to address in rbp with offset -38
11010000000000101001111001000001 //Write value in r4 to address in rbp with offset -41
01110000000000000001000000000001 //Set r1 to 1
11100000000000101001111000101100 //Read at address in rbp with offset -41 to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011001100101010 //Jump to constant address 6549
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011001101000000 //Jump to constant address 6560
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000111100000000000101 //Set r5 to 60
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000101001111000100101 //Read at address in rbp with offset -41 to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000101001111000101100 //Read at address in rbp with offset -41 to r12
01110000000000001000000000001101 //Set r13 to 8
00000011000000000000110011011100 //Compute r12 >> r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000011110000000001101 //Set r13 to 30
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000011001110101100 //Jump to constant address 6614
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011001111000010 //Jump to constant address 6625
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000000000000000001100 //Set r12 to 0
11010000000000100111111011000001 //Write value in r12 to address in rbp with offset -39
01110000000000000000000000001100 //Set r12 to 0
11010000000000101000111011000001 //Write value in r12 to address in rbp with offset -40
01110000000000000001000000000001 //Set r1 to 1
11100000000000101000111000101100 //Read at address in rbp with offset -40 to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011001111010110 //Jump to constant address 6635
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011010011010110 //Jump to constant address 6763
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000101101000000000101 //Set r5 to 45
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000000101010111000010001 //Write value in r1 to address in rbp with offset -42
01110001010111001011000000000001 //Set r1 to 5579
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
11100000000000100111111000100101 //Read at address in rbp with offset -39 to r5
00000000000000000000000001011100 //Compute r0 OR r5 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
11100000000000100110111000101100 //Read at address in rbp with offset -38 to r12
00000000000000000000000001011101 //Compute r0 OR r5 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000101 //Compute r0 OR r12 and write result to r5
11100000000000101010111000100100 //Read at address in rbp with offset -42 to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11100000000000100111111000101100 //Read at address in rbp with offset -39 to r12
11100000000000101010111000101101 //Read at address in rbp with offset -42 to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000100111111000010001 //Write value in r1 to address in rbp with offset -39
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000111101000000000101 //Set r5 to 61
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011010010001110 //Jump to constant address 6727
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011010010011100 //Jump to constant address 6734
01110000000000000001000000001100 //Set r12 to 1
11010000000000101000111011000001 //Write value in r12 to address in rbp with offset -40
10010000000000000011010011010100 //Jump to constant address 6762
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000011110000000001101 //Set r13 to 30
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011010010101000 //Jump to constant address 6740
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011010010110010 //Jump to constant address 6745
10010000000000000011010011010010 //Jump to constant address 6761
01110001001110101010000000000001 //Set r1 to 5034
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000000101101000000000101 //Set r5 to 4141
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000000000000 //NOP to quickfix double labels
10010000000000000011001111001010 //Jump to constant address 6629
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011010111100001111 //Compute rsp - 26 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000110010000000000101 //Set r5 to 50
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011010100110010 //Jump to constant address 6809
01110000000000000000000000000010 //Set r2 to 0
01110000000000000000000000000011 //Set r3 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01100000000000000010000011000000 //If r0 == r12, then jump to offset 2
10010000000000000011010101010010 //Jump to constant address 6825
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000001000001000000001101 //Set r13 to 65
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011010101001000 //Jump to constant address 6820
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01100000000000000010000011000000 //If r0 == r12, then jump to offset 2
10010000000000000011010101010010 //Jump to constant address 6825
10010000000000000011010101010100 //Jump to constant address 6826
01110000000000000001000000000011 //Set r3 to 1
00000000000000000000000000111100 //Compute r0 OR r3 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011010101101100 //Jump to constant address 6838
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
10010000000000000011010101111010 //Jump to constant address 6845
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011010111100001111 //Compute rsp - 26 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000110101000000000101 //Set r5 to 53
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011010111010100 //Jump to constant address 6890
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011010111101100 //Jump to constant address 6902
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
10010000000000000011010111111010 //Jump to constant address 6909
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011010111100001111 //Compute rsp - 26 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000110110000000000101 //Set r5 to 54
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000001000000000101 //Set r5 to 1
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011011001100100 //Jump to constant address 6962
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011011001111100 //Jump to constant address 6974
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
10010000000000000011011010001010 //Jump to constant address 6981
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011010111100001111 //Compute rsp - 26 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000001000000000000000101 //Set r5 to 64
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011011011100100 //Jump to constant address 7026
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011011011111100 //Jump to constant address 7038
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
10010000000000000011011100001010 //Jump to constant address 7045
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000011010111100001111 //Compute rsp - 26 and write result to rsp
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000110100000000000101 //Set r5 to 52
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100101111000000000001 //Set r1 to 5423
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000010100000000001101 //Set r13 to 20
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000011011101100100 //Jump to constant address 7090
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011011101111010 //Jump to constant address 7101
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101001110010000000000001 //Set r1 to 6770
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011011110010100 //Jump to constant address 7114
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011011110101010 //Jump to constant address 7125
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101100000011000000000001 //Set r1 to 6915
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011011111000100 //Jump to constant address 7138
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011011111011010 //Jump to constant address 7149
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000000111101111100001111 //Compute rsp - 61 and write result to rsp
11010000000000111011111001010001 //Write value in r5 to address in rbp with offset -59
01110000000000000001000000001100 //Set r12 to 1
11010000000000111100111011000001 //Write value in r12 to address in rbp with offset -60
01110000000000101111000000001100 //Set r12 to 47
11010000000000111010111011000001 //Write value in r12 to address in rbp with offset -58
01110000000000000001000000001100 //Set r12 to 1
11010000000000111101111011000001 //Write value in r12 to address in rbp with offset -61
11100000000000111100111000100001 //Read at address in rbp with offset -60 to r1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000111011111000101100 //Read at address in rbp with offset -59 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010010 //Compute r0 OR r1 and write result to r2
11100000000000000000001000000001 //Read at address in r2 with offset 0 to r1
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000000000000001101 //Set r13 to 0
01100000000000000010110111000000 //If r13 == r12, then jump to offset 2
10010000000000000011100000100000 //Jump to constant address 7184
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011100101000100 //Jump to constant address 7330
11100000000000111100111000100001 //Read at address in rbp with offset -60 to r1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000111011111000101100 //Read at address in rbp with offset -59 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010010 //Compute r0 OR r1 and write result to r2
11100000000000000000001000000001 //Read at address in r2 with offset 0 to r1
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000101111000000001101 //Set r13 to 47
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011100001001010 //Jump to constant address 7205
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011100011100010 //Jump to constant address 7281
11100000000000111101111000100001 //Read at address in rbp with offset -61 to r1
01110000000000000000000000001101 //Set r13 to 0
01110000000000000001000000000111 //Set r7 to 1
00000011100000000000011100010111 //Compute r7 * r1 and write result to r7
00001010000000111010011100000111 //Compute r7 - 58 and write result to r7
00000001100000000000011111100111 //Compute r7 + rbp and write result to r7
11010000000000000000011111010000 //Write value in r13 to address in r7 with offset 0
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000101111000000000101 //Set r5 to 47
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010110100011000000000001 //Set r1 to 5539
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000111010111000000101 //Compute rbp - 58 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000000000000001100 //Set r12 to 0
11010000000000111101111011000001 //Write value in r12 to address in rbp with offset -61
01110001101001110010000000000001 //Set r1 to 6770
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011100011001010 //Jump to constant address 7269
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011100011100000 //Jump to constant address 7280
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
10010000000000000011100100110110 //Jump to constant address 7323
11100000000000111100111000100001 //Read at address in rbp with offset -60 to r1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11100000000000111011111000101100 //Read at address in rbp with offset -59 to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
11100000000000000000000100000010 //Read at address in r1 with offset 0 to r2
11100000000000111101111000100001 //Read at address in rbp with offset -61 to r1
00000000000000000000000000101101 //Compute r0 OR r2 and write result to r13
01110000000000000001000000000111 //Set r7 to 1
00000011100000000000011100010111 //Compute r7 * r1 and write result to r7
00001010000000111010011100000111 //Compute r7 - 58 and write result to r7
00000001100000000000011111100111 //Compute r7 + rbp and write result to r7
11010000000000000000011111010000 //Write value in r13 to address in r7 with offset 0
11100000000000111101111000100001 //Read at address in rbp with offset -61 to r1
11100000000000111101111000101100 //Read at address in rbp with offset -61 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000111101111000010001 //Write value in r1 to address in rbp with offset -61
01110000000000000001000000000001 //Set r1 to 1
11100000000000111101111000101100 //Read at address in rbp with offset -61 to r12
01110000000000001101000000001101 //Set r13 to 13
00110000000000000010110111000000 //If r13 >= r12, then jump to offset 2
10010000000000000011100100011110 //Jump to constant address 7311
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011100100110100 //Jump to constant address 7322
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00000000000000000000000000000000 //NOP to quickfix double labels
11100000000000111100111000100001 //Read at address in rbp with offset -60 to r1
11100000000000111100111000101100 //Read at address in rbp with offset -60 to r12
01110000000000000001000000001101 //Set r13 to 1
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
11010000000000111100111000010001 //Write value in r1 to address in rbp with offset -60
10010000000000000011011111111110 //Jump to constant address 7167
11100000000000111101111000100001 //Read at address in rbp with offset -61 to r1
01110000000000000000000000001101 //Set r13 to 0
01110000000000000001000000000111 //Set r7 to 1
00000011100000000000011100010111 //Compute r7 * r1 and write result to r7
00001010000000111010011100000111 //Compute r7 - 58 and write result to r7
00000001100000000000011111100111 //Compute r7 + rbp and write result to r7
11010000000000000000011111010000 //Write value in r13 to address in r7 with offset 0
01110000000000000001000000000001 //Set r1 to 1
11100000000000111101111000101100 //Read at address in rbp with offset -61 to r12
01110000000000000000000000001101 //Set r13 to 0
01010000000000000010110111000000 //If r13 != r12, then jump to offset 2
10010000000000000011100101011110 //Jump to constant address 7343
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011100101110100 //Jump to constant address 7354
01110000000000000000000000000001 //Set r1 to 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001010011110101000000000001 //Set r1 to 5365
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000101111000000000101 //Set r5 to 47
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010110100011000000000001 //Set r1 to 5539
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000111010111000000101 //Compute rbp - 58 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100100001000000000001 //Set r1 to 5409
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001010100001011000000000001 //Set r1 to 5387
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000001 //Set r1 to 1
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001001000111100001111 //Compute rsp - 72 and write result to rsp
01110001011010101101000000000001 //Set r1 to 5805
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011100111110000 //Jump to constant address 7416
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101000000110 //Jump to constant address 7427
01110000000000110001000000000001 //Set r1 to 49
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001011100000101000000000001 //Set r1 to 5893
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101000100000 //Jump to constant address 7440
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101000110110 //Jump to constant address 7451
01110000000000110010000000000001 //Set r1 to 50
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101111110100000000000001 //Set r1 to 7156
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000000100010000000000101 //Set r5 to 4130
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101001010100 //Jump to constant address 7466
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101001101010 //Jump to constant address 7477
01110000000000110011000000000001 //Set r1 to 51
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101001110010000000000001 //Set r1 to 6770
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101010000100 //Jump to constant address 7490
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101010011010 //Jump to constant address 7501
01110000000000110100000000000001 //Set r1 to 52
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001011111000011000000000001 //Set r1 to 6083
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
11010000000001001000111000010001 //Write value in r1 to address in rbp with offset -72
01110001010000010011000000000001 //Set r1 to 5139
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000001000111111000000100 //Compute rbp - 71 and write result to r4
11100000000001001000111000100101 //Read at address in rbp with offset -72 to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110000111000000000001 //Set r1 to 4999
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001001011100001000000000101 //Set r5 to 4833
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110101010000000000001 //Set r1 to 5034
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000001000111111000000101 //Compute rbp - 71 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001100000101000000000000001 //Set r1 to 6184
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101011111010 //Jump to constant address 7549
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101100010000 //Jump to constant address 7560
01110000000000110101000000000001 //Set r1 to 53
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001100010001011000000000001 //Set r1 to 6283
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000010010000000000101 //Set r5 to 18
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
11100000000001001000111000100100 //Read at address in rbp with offset -72 to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101100110000 //Jump to constant address 7576
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101101000110 //Jump to constant address 7587
01110000000000110110000000000001 //Set r1 to 54
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101100000011000000000001 //Set r1 to 6915
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101101100000 //Jump to constant address 7600
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101101110110 //Jump to constant address 7611
01110000000000110111000000000001 //Set r1 to 55
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000010010000000000010 //Set r2 to 18
01110000000000000000000100000010 //Set highest 16 bits of r2 to 0
11100000000001001000111000100001 //Read at address in rbp with offset -72 to r1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
01110000000000000001000000001101 //Set r13 to 1
00000011100000000000110011011100 //Compute r12 * r13 and write result to r12
00000000000000000000000011000001 //Compute r0 OR r12 and write result to r1
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00000001100000000000110011011100 //Compute r12 + r13 and write result to r12
00000000000000000000000011000010 //Compute r0 OR r12 and write result to r2
00000000000000000000000000100001 //Compute r0 OR r2 and write result to r1
01110000000000000000000000001100 //Set r12 to 0
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
01110001001110101010000000000001 //Set r1 to 5034
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000010010000000000101 //Set r5 to 18
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000110000000000000001 //Set r1 to 48
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001010010111100001111 //Compute rsp - 82 and write result to rsp
01110001011010101101000000000001 //Set r1 to 5805
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101111010100 //Jump to constant address 7658
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011101111101010 //Jump to constant address 7669
01110000000000110001000000000001 //Set r1 to 49
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001011100000101000000000001 //Set r1 to 5893
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110000000100 //Jump to constant address 7682
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110000011010 //Jump to constant address 7693
01110000000000110010000000000001 //Set r1 to 50
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101111110100000000000001 //Set r1 to 7156
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000000010010000000000101 //Set r5 to 4114
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001101110001011000000000001 //Set r1 to 7051
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110001000110 //Jump to constant address 7715
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110001011100 //Jump to constant address 7726
01110000000000110011000000000001 //Set r1 to 51
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101001110010000000000001 //Set r1 to 6770
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110001110110 //Jump to constant address 7739
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110010001100 //Jump to constant address 7750
01110000000000110100000000000001 //Set r1 to 52
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001011111000011000000000001 //Set r1 to 6083
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000000010101 //Compute r0 OR r1 and write result to r5
01110001010000010011000000000001 //Set r1 to 5139
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000001010010111000000100 //Compute rbp - 82 and write result to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110000111000000000001 //Set r1 to 4999
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000010000010000000000101 //Set r5 to 4226
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110101010000000000001 //Set r1 to 5034
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000001010010111000000101 //Compute rbp - 82 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001101100000011000000000001 //Set r1 to 6915
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110011101000 //Jump to constant address 7796
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110011111110 //Jump to constant address 7807
01110000000000110101000000000001 //Set r1 to 53
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000110000000000000001 //Set r1 to 48
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001011100111100001111 //Compute rsp - 92 and write result to rsp
01110001011010101101000000000001 //Set r1 to 5805
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110100101110 //Jump to constant address 7831
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110101000100 //Jump to constant address 7842
01110000000000110001000000000001 //Set r1 to 49
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001011100000101000000000001 //Set r1 to 5893
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110101011110 //Jump to constant address 7855
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110101110100 //Jump to constant address 7866
01110000000000110010000000000001 //Set r1 to 50
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101111110100000000000001 //Set r1 to 7156
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000001010011000000000101 //Set r5 to 4179
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001101110001011000000000001 //Set r1 to 7051
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110110100000 //Jump to constant address 7888
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110110110110 //Jump to constant address 7899
01110000000000110011000000000001 //Set r1 to 51
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001101111110100000000000001 //Set r1 to 7156
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000000011010000000000101 //Set r5 to 4122
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001101001110010000000000001 //Set r1 to 6770
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110111100010 //Jump to constant address 7921
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011110111111000 //Jump to constant address 7932
01110000000000110100000000000001 //Set r1 to 52
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001100000101000000000000001 //Set r1 to 6184
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110000000000000000000000000101 //Set r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011111000010100 //Jump to constant address 7946
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011111000101010 //Jump to constant address 7957
01110000000000110101000000000001 //Set r1 to 53
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001100110001001000000000001 //Set r1 to 6537
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000010001110000000000101 //Set r5 to 4238
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
01110000001001010010000000000100 //Set r4 to 594
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011111001001010 //Jump to constant address 7973
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011111001100000 //Jump to constant address 7984
01110000000000110110000000000001 //Set r1 to 54
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110001011111000011000000000001 //Set r1 to 6083
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000000010101 //Compute r0 OR r1 and write result to r5
01110001010000010011000000000001 //Set r1 to 5139
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000001011100111000000100 //Compute rbp - 92 and write result to r4
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110000111000000000001 //Set r1 to 4999
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
01110001000001011011000000000101 //Set r5 to 4187
01110000000000000000000100000101 //Set highest 16 bits of r5 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001001110101010000000000001 //Set r1 to 5034
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000001011100111000000101 //Compute rbp - 92 and write result to r5
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001101100000011000000000001 //Set r1 to 6915
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110000000000000001000000000010 //Set r2 to 1
00000000000000000000000000011100 //Compute r0 OR r1 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011111010111100 //Jump to constant address 8030
01110000000000000000000000000010 //Set r2 to 0
00000000000000000000000000101100 //Compute r0 OR r2 and write result to r12
00001010000000000000110000001100 //Compute r12 - 0 and write result to r12
01010000000000000010000011000000 //If r0 != r12, then jump to offset 2
10010000000000000011111011010010 //Jump to constant address 8041
01110000000000110111000000000001 //Set r1 to 55
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000110000000000000001 //Set r1 to 48
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001011100111100001111 //Compute rsp - 92 and write result to rsp
01110001010111111011000000000001 //Set r1 to 5627
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
01110001110011100111000000000001 //Set r1 to 7399
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00000000000000000000000000011101 //Compute r0 OR r1 and write result to r13
00100000000000000000000000001100 //Save PC to r12
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111000000 //Write value in r12 to address in rsp with offset 0
10000000000000000000000011010000 //Jump to reg r13 with offset 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
01110000000000110000000000000001 //Set r1 to 48
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001011100111100001111 //Compute rsp - 92 and write result to rsp
01110000000000000000000000000001 //Set r1 to 0
01110000000001001100000100000001 //Set highest 16 bits of r1 to 76
00000000000000000000000000010001 //Compute r0 OR r1 and write result to r1
01110000000000000001000000001100 //Set r12 to 1
11010000000000000000000111000000 //Write value in r12 to address in r1 with offset 0
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001011100111100001111 //Compute rsp - 92 and write result to rsp
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001011100111100001111 //Compute rsp - 92 and write result to rsp
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
00001010000000000001111100001111 //Compute rsp - 1 and write result to rsp
11010000000000000000111111100000 //Write value in rbp to address in rsp with offset 0
00000000000000000000000011111110 //Compute r0 OR rsp and write result to rbp
00001010000001011100111100001111 //Compute rsp - 92 and write result to rsp
00000000000000000000000011101111 //Compute r0 OR rbp and write result to rsp
11100000000000000000111100001110 //Read at address in rsp with offset 0 to rbp
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
11100000000000000000111100001100 //Read at address in rsp with offset 0 to r12
00001001100000000001111100001111 //Compute rsp + 1 and write result to rsp
10000000000000000100000011000000 //Jump to reg r12 with offset 4
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
10110000000000000000000010100000 //Push r10 to stack
10110000000000000000000010110000 //Push r11 to stack
10110000000000000000000011000000 //Push r12 to stack
10110000000000000000000011010000 //Push r13 to stack
10110000000000000000000011100000 //Push rbp to stack
10110000000000000000000011110000 //Push rsp to stack
01110000000000000000000000001111 //Set rsp to 0
01110000000001111011000100001111 //Set highest 16 bits of rsp to 123
01110010000000011000000000000001 //Set r1 to 8216
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000000100000100000001 //Compute r1 - 4 and write result to r1
11010000000000000000111100010000 //Write value in r1 to address in rsp with offset 0
10010000000000000011111100011110 //Jump to constant address 8079
11111111111111111111111111111111 //Halt
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
10110000000000000000000010100000 //Push r10 to stack
10110000000000000000000010110000 //Push r11 to stack
10110000000000000000000011000000 //Push r12 to stack
10110000000000000000000011010000 //Push r13 to stack
10110000000000000000000011100000 //Push rbp to stack
10110000000000000000000011110000 //Push rsp to stack
01110000000000000000000000001111 //Set rsp to 0
01110000000001111011000100001111 //Set highest 16 bits of rsp to 123
01110010000000011000000000000001 //Set r1 to 8216
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000000100000100000001 //Compute r1 - 4 and write result to r1
11010000000000000000111100010000 //Write value in r1 to address in rsp with offset 0
10010000000000000011111100111100 //Jump to constant address 8094
11111111111111111111111111111111 //Halt
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
10110000000000000000000010100000 //Push r10 to stack
10110000000000000000000010110000 //Push r11 to stack
10110000000000000000000011000000 //Push r12 to stack
10110000000000000000000011010000 //Push r13 to stack
10110000000000000000000011100000 //Push rbp to stack
10110000000000000000000011110000 //Push rsp to stack
01110000000000000000000000001111 //Set rsp to 0
01110000000001111011000100001111 //Set highest 16 bits of rsp to 123
01110010000000011000000000000001 //Set r1 to 8216
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000000100000100000001 //Compute r1 - 4 and write result to r1
11010000000000000000111100010000 //Write value in r1 to address in rsp with offset 0
10010000000000000011111101010000 //Jump to constant address 8104
11111111111111111111111111111111 //Halt
10110000000000000000000000010000 //Push r1 to stack
10110000000000000000000000100000 //Push r2 to stack
10110000000000000000000000110000 //Push r3 to stack
10110000000000000000000001000000 //Push r4 to stack
10110000000000000000000001010000 //Push r5 to stack
10110000000000000000000001100000 //Push r6 to stack
10110000000000000000000001110000 //Push r7 to stack
10110000000000000000000010000000 //Push r8 to stack
10110000000000000000000010010000 //Push r9 to stack
10110000000000000000000010100000 //Push r10 to stack
10110000000000000000000010110000 //Push r11 to stack
10110000000000000000000011000000 //Push r12 to stack
10110000000000000000000011010000 //Push r13 to stack
10110000000000000000000011100000 //Push rbp to stack
10110000000000000000000011110000 //Push rsp to stack
01110000000000000000000000001111 //Set rsp to 0
01110000000001111011000100001111 //Set highest 16 bits of rsp to 123
01110010000000011000000000000001 //Set r1 to 8216
01110000000000000000000100000001 //Set highest 16 bits of r1 to 0
00001010000000000100000100000001 //Compute r1 - 4 and write result to r1
11010000000000000000111100010000 //Write value in r1 to address in rsp with offset 0
10010000000000000011111101100100 //Jump to constant address 8114
11111111111111111111111111111111 //Halt
10100000000000000000000000001111 //Pop from stack to rsp
10100000000000000000000000001110 //Pop from stack to rbp
10100000000000000000000000001101 //Pop from stack to r13
10100000000000000000000000001100 //Pop from stack to r12
10100000000000000000000000001011 //Pop from stack to r11
10100000000000000000000000001010 //Pop from stack to r10
10100000000000000000000000001001 //Pop from stack to r9
10100000000000000000000000001000 //Pop from stack to r8
10100000000000000000000000000111 //Pop from stack to r7
10100000000000000000000000000110 //Pop from stack to r6
10100000000000000000000000000101 //Pop from stack to r5
10100000000000000000000000000100 //Pop from stack to r4
10100000000000000000000000000011 //Pop from stack to r3
10100000000000000000000000000010 //Pop from stack to r2
10100000000000000000000000000001 //Pop from stack to r1
00010000000000000000000000000000 //Return from interrupt
11111111111111111111111111111111 //Halt
